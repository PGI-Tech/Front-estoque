{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\igdou\\\\Documents\\\\Visual_Studio_Code\\\\Projetos\\\\Front-estoque\\\\src\\\\components\\\\Table\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Input } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  Colunas,\n  Data,\n  Text\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    nome: '',\n    idade: '',\n    cidade: ''\n  });\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSave = () => {\n    // Aqui você pode implementar a lógica para salvar os dados, se necessário.\n    // Por exemplo, você pode atualizar o array 'Data' com os novos dados do formulário.\n    console.log('Dados salvos:', formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      fontFamily: 'Arial, sans-serif',\n      width: '100%',\n      margin: 'auto',\n      flexDirection: 'column'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        borderCollapse: 'collapse',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            borderBottom: '3px solid #ccc'\n          },\n          children: Colunas.map((coluna, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: '10px 0',\n              textAlign: 'left'\n            },\n            children: coluna\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Data.map((rowData, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            borderBottom: '2px solid #ddd'\n          },\n          children: rowData.map((cellData, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: '10px 0'\n            },\n            children: cellData\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Table, \"yKrR7Q1ILB+K8qRlidnoaHlC7gk=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","Input","jsxDEV","_jsxDEV","Table","Colunas","Data","Text","_s","formData","setFormData","nome","idade","cidade","handleInputChange","event","name","value","target","prevData","handleSave","console","log","style","display","fontFamily","width","margin","flexDirection","children","borderCollapse","marginBottom","borderBottom","map","coluna","index","padding","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","rowData","rowIndex","cellData","cellIndex","_c","$RefreshReg$"],"sources":["C:/Users/igdou/Documents/Visual_Studio_Code/Projetos/Front-estoque/src/components/Table/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Input } from \"./styles\";\r\n\r\nconst Table = ({ Colunas, Data, Text }) => {\r\n  const [formData, setFormData] = useState({\r\n    nome: '',\r\n    idade: '',\r\n    cidade: '',\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Aqui você pode implementar a lógica para salvar os dados, se necessário.\r\n    // Por exemplo, você pode atualizar o array 'Data' com os novos dados do formulário.\r\n    console.log('Dados salvos:', formData);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        fontFamily: 'Arial, sans-serif',\r\n        width: '100%',\r\n        margin: 'auto',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <table\r\n        style={{\r\n          width: '100%',\r\n          borderCollapse: 'collapse',\r\n          marginBottom: '20px',\r\n        }}\r\n      >\r\n        <thead>\r\n          <tr style={{ borderBottom: '3px solid #ccc' }}>\r\n            {Colunas.map((coluna, index) => (\r\n              <th key={index} style={{ padding: '10px 0', textAlign: 'left' }}>\r\n                {coluna}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Data.map((rowData, rowIndex) => (\r\n            <tr key={rowIndex} style={{ borderBottom: '2px solid #ddd' }}>\r\n              {rowData.map((cellData, cellIndex) => (\r\n                <td key={cellIndex} style={{ padding: '10px 0' }}>\r\n                  {cellData}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}